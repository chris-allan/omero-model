task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from javadoc
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publishing {
    publications {
        modelJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            // Edit pom to mark "provided" as dependencies
            pom.withXml { xml ->
                def repositoriesNode = xml.asNode().appendNode('repositories')
                project.repositories.each {
                    if (!(it.name.toLowerCase().startsWith('maven'))) {
                        def repositoryNode = repositoriesNode.appendNode('repository')
                        repositoryNode.appendNode('id', it.name)
                        repositoryNode.appendNode('name', it.name)
                        repositoryNode.appendNode('url', it.url)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username = System.getenv('ARTIFACTORY_USER') ?: "${findProperty('artifactory_user')}"
                password = System.getenv('ARTIFACTORY_PASSWORD') ?: "${findProperty('artifactory_password')}"
            }
            if (version.endsWith('SNAPSHOT')) {
                url "https://artifacts.openmicroscopy.org/artifactory/ome.snapshots"
            } else {
                url "https://artifacts.openmicroscopy.org/artifactory/ome.staging"
            }
        }
    }
}

