##
## omero-model.properties
## ----------------------
##
## DO NOT EDIT!
##
## This properties file is compiled into omero-model.jar and serves as a default
## for all server-side values (client configuration happens differently).
##
## Any of these properties can be altered by using bin/omero config. MODIFYING
## THIS FILE DOES NOT ALTER SERVER BEHAVIOR. It solely defines the defaults
## at compile time!
##
## For an overview of these properties, see
## https://docs.openmicroscopy.org/latest/omero/sysadmins/config.html
##
## Properties marked with "DEVELOPMENT" should not be used in production.

# Polling frequency of the pixeldata processing. Set empty to disable
# pixeldata processing.
#
# .. |cron| replace::
#   Cron Format: seconds minutes hours day-of-month month day-of-week year
#   (optional). For example, "0,30 * * * * ?" is equivalent to running every
#   30 seconds. For more information download the latest *1.x version* of
#   the `Quartz Job Scheduler`_ and review
#   :file:`docs/api/org/quartz/CronExpression.html` within the distribution.
#
# .. _Quartz Job Scheduler:
#   http://www.quartz-scheduler.org/downloads/
#
# |cron|
omero.pixeldata.cron=*/4 * * * * ?

# How many pixel pyramids will be generated
# at a single time. The value should typically
# not be set to higher than the number of
# cores on the server machine.
omero.pixeldata.threads=2

# EventLogLoader that will be used for loading EventLogs for
# the action "PIXELDATA". Choices include: pixelDataEventLogQueue
# and the older pixelDataPersistentEventLogLoader
omero.pixeldata.event_log_loader=pixelDataEventLogQueue

# Number of instances indexed per indexing.
# (Ignored by pixelDataEventLogQueue)
omero.pixeldata.batch=50

# Instead, it is possible to tell the server
# to run more pixeldata repetitions, each of
# which gets completely committed before the
# next. This will only occur when there is
# a substantial backlog of pixels to process.
#
# (Ignored by pixelDataEventLogQueue; uses threads instead)
omero.pixeldata.repetitions=1

# Name of the spring bean which will be used
# to calculate the backoff (in ms) that users
# should wait for an image to be ready to view.
omero.pixeldata.backoff=ome.io.nio.SimpleBackOff
# A default value for the backoff time.
omero.pixeldata.backoff.default=1000
# The maximum number of pixels (in any dimension),
# if exceeded the default value will be used.
omero.pixeldata.backoff.maxpixels=1000000

# Maximum time in milliseconds that file parsing
# can take without the parsed metadata being
# cached to BioFormatsCache.
omero.pixeldata.memoizer_wait=0

# Whether the PixelData.dispose() method should
# try to clean up ByteBuffer instances which may
# lead to memory exceptions. See ticket #11675
# for more information. Note: the property is
# set globally for the JVM.
omero.pixeldata.dispose=true

# For read-only servers set this to a local
# read-write directory so that memo files
# can be created and used. Activates only if
# the binary repository is read-only.
omero.pixeldata.memoizer.dir.local=

# Default sizes for tiles are provided by a
# ome.io.nio.TileSizes implementation. By default
# the bean ("configuredTileSizes") uses the properties
# provided here.
omero.pixeldata.tile_sizes_bean=configuredTileSizes
omero.pixeldata.tile_width=256
omero.pixeldata.tile_height=256

# With :property:`omero.pixeldata.max_plane_height`, specifies
# the plane size cutoff above which a pixel pyramid will be
# generated by the pixeldata service unless subresolutions
# can be read from the file format.
# These values will be ignored for floating or double pixel
# data types where no pyramid will be generated.
omero.pixeldata.max_plane_width=3192

# With :property:`omero.pixeldata.max_plane_width`, specifies
# the plane size cutoff above which a pixel pyramid will be
# generated by the pixeldata service unless subresolutions
# can be read from the file format.
# These values will be ignored for floating or double pixel
# data types where no pyramid will be generated.
omero.pixeldata.max_plane_height=3192
